basePath: /
definitions:
  account.DepositRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
    required:
    - amount
    type: object
  account.WithdrawRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
    required:
    - amount
    type: object
  auth.LoginInput:
    properties:
      identity:
        type: string
      password:
        type: string
    required:
    - identity
    - password
    type: object
  common.ProblemDetails:
    properties:
      detail:
        description: Human-readable explanation
        type: string
      errors:
        description: 'Optional: additional error details'
      instance:
        description: URI reference that identifies the specific occurrence
        type: string
      status:
        description: HTTP status code
        type: integer
      title:
        description: Short, human-readable summary
        type: string
      type:
        description: A URI reference that identifies the problem type
        type: string
    type: object
  common.Response:
    properties:
      data:
        description: Response data
      message:
        description: Human-readable explanation
        type: string
      status:
        description: HTTP status code
        type: integer
    type: object
  currency.CurrencyMeta:
    properties:
      active:
        type: boolean
      code:
        type: string
      country:
        type: string
      created:
        type: string
      decimals:
        type: integer
      metadata:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      region:
        type: string
      symbol:
        type: string
      updated:
        type: string
    type: object
  currency.RegisterCurrencyRequest:
    properties:
      active:
        type: boolean
      code:
        type: string
      country:
        type: string
      decimals:
        maximum: 8
        minimum: 0
        type: integer
      metadata:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      region:
        type: string
      symbol:
        type: string
    required:
    - code
    - decimals
    - name
    - symbol
    type: object
  user.NewUser:
    properties:
      email:
        maxLength: 50
        type: string
      password:
        maxLength: 72
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  user.PasswordInput:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  user.UpdateUserInput:
    properties:
      names:
        maxLength: 100
        type: string
    type: object
host: fintech-beryl-beta.vercel.app
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: Fintech API documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Fintech API
  version: 1.0.0
paths:
  /account:
    post:
      consumes:
      - application/json
      description: Create a new account for the authenticated user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      security:
      - Bearer: []
      summary: Create a new account
      tags:
      - accounts
  /account/{id}/balance:
    get:
      consumes:
      - application/json
      description: Retrieve the balance of a specific account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      security:
      - Bearer: []
      summary: Get account balance
      tags:
      - accounts
  /account/{id}/deposit:
    post:
      consumes:
      - application/json
      description: Deposit a specified amount into the user's account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: Deposit request with amount
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/account.DepositRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      security:
      - Bearer: []
      summary: Deposit funds into an account
      tags:
      - accounts
  /account/{id}/transactions:
    get:
      consumes:
      - application/json
      description: Retrieve the list of transactions for a specific account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      security:
      - Bearer: []
      summary: Get account transactions
      tags:
      - accounts
  /account/{id}/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraw a specified amount from the user's account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: Withdrawal request with amount
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/account.WithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      security:
      - Bearer: []
      summary: Withdraw funds from an account
      tags:
      - accounts
  /api/currencies/{code}:
    get:
      consumes:
      - application/json
      description: Get currency information by ISO 4217 code
      parameters:
      - description: Currency code (e.g., USD, EUR)
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/currency.CurrencyMeta'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Get currency by code
      tags:
      - currencies
  /api/currencies/{code}/supported:
    get:
      consumes:
      - application/json
      description: Check if a currency code is supported
      parameters:
      - description: Currency code (e.g., USD, EUR)
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Check if currency is supported
      tags:
      - currencies
  /api/currencies/admin:
    post:
      consumes:
      - application/json
      description: Register a new currency (admin only)
      parameters:
      - description: Currency information
        in: body
        name: currency
        required: true
        schema:
          $ref: '#/definitions/currency.RegisterCurrencyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/currency.CurrencyMeta'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Register currency
      tags:
      - currencies
  /api/currencies/admin/{code}:
    delete:
      consumes:
      - application/json
      description: Remove a currency from the registry (admin only)
      parameters:
      - description: Currency code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Unregister currency
      tags:
      - currencies
  /api/currencies/admin/{code}/activate:
    put:
      consumes:
      - application/json
      description: Activate a currency (admin only)
      parameters:
      - description: Currency code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Activate currency
      tags:
      - currencies
  /api/currencies/admin/{code}/deactivate:
    put:
      consumes:
      - application/json
      description: Deactivate a currency (admin only)
      parameters:
      - description: Currency code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Deactivate currency
      tags:
      - currencies
  /api/currencies/default:
    get:
      consumes:
      - application/json
      description: Get the default currency information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/currency.CurrencyMeta'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Get default currency
      tags:
      - currencies
  /api/currencies/region/{region}:
    get:
      consumes:
      - application/json
      description: Search for currencies by region
      parameters:
      - description: Region name
        in: path
        name: region
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/currency.CurrencyMeta'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Search currencies by region
      tags:
      - currencies
  /api/currencies/search:
    get:
      consumes:
      - application/json
      description: Search for currencies by name
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/currency.CurrencyMeta'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Search currencies
      tags:
      - currencies
  /api/currencies/statistics:
    get:
      consumes:
      - application/json
      description: Get currency registry statistics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Get currency statistics
      tags:
      - currencies
  /api/currencies/supported:
    get:
      consumes:
      - application/json
      description: Get all supported currency codes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: List supported currencies
      tags:
      - currencies
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with identity (username or email) and password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: User login
      tags:
      - auth
  /currency:
    get:
      consumes:
      - application/json
      description: Get a list of all available currencies in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      security:
      - Bearer: []
      summary: List all currencies
      tags:
      - currencies
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user account with username, email, and password
      parameters:
      - description: User creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.NewUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      summary: Create a new user
      tags:
      - users
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user account by ID with password confirmation
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Password confirmation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.PasswordInput'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      security:
      - Bearer: []
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      security:
      - Bearer: []
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/common.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ProblemDetails'
      security:
      - Bearer: []
      summary: Update user
      tags:
      - users
swagger: "2.0"
